inbound.length=0
outbound.length=0
inbound.allowZeroHop=true
outbound.allowZeroHop=true
inbound.lengthVariance=0
outbound.lengthVariance=0
inbound.backupQuantity=4
outbound.backupQuantity=4
inbound.quantity=4
outbound.quantity=4
#i2cp.reduceIdleTime=6
i2cp.reduceOnIdle=true
i2cp.reduceQuantity=2

i2cp.closeIdleTime=12 #Need to implement in the forwarder
i2cp.closeOnIdle=true #Need to implement in the forwarder

i2cp.enableAccessList=true
#i2cp.accessList=Handled in code with: samrtc.getWhitelist()
i2cp.dontPublishLeaseSet=false
keys=samrtc

#Encrypted leasesets are an interesting option here. I need to fully implement
#them in the library though.
#i2cp.encryptLeaseSet=false
#i2cp.leaseSetKey=#
#i2cp.leaseSetPrivateKey=#
#i2cp.leaseSetSigningPrivateKey=#
